/**
* Mixins
*/

/*wrapper
Giving the wrapper a width prevents the layout from stretching too wide.

usage: using a wrapper div for elements to be placed inside. then @include wrapper(insert width);
*/ 

@mixin wrapper($width) {
    width: $width;
    margin: auto;
}

/*a mixin for opacity
usage: @include opacity(amount of opacity);
*/ 

@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity = $opacity-ie); //IE8
  }

/*cebter a block element without having to worry if there is any top or bottom margin applied

usage: @include push--auto*/ 

@mixin push--auto {
    margin: { 
        left: auto;
        right: auto;
    }
}

/*giving dimensions to a box
You must provide at least one parameter to make it work.
usage: @include @box(amount of px you want to use);
*/ 

@mixin box-size($width, $height: $width) {
    width: $width;
    height: $height;
}

/*
usage: @include mediaQ(insert maxwidth,minwidth); or @include mediaQ(insert maxwidth);
*/

@mixin mediaQ($arg...) {
    @if length($arg) == 1 {
        @media screen and (max-width: nth($arg, 1)) {
            @content;
        }
    }

    @if length($arg) == 2 {
        @media screen and (max-width: nth($arg,1)) and (min-width: nth($arg,2)) {
            @content;
        }
    }
}

/*css triangle

you will need to just specify the color, how big you want it and the direction its going to come out of your element

usage: @include css-triangle(color, direction, size)*/

@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
    @include pseudo($pos: $position);
    width: 0;
    height: 0;
    @if $round {
        border-radius: 3px;
    }
    @if $direction == down {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;
        margin-top: 0 - round( $size / 2.5 );
    } @else if $direction == up {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
        margin-bottom: 0 - round( $size / 2.5 );
    } @else if $direction == right {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
        margin-right: -$size;
    } @else if  $direction == left {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
        margin-left: -$size;
    }
}